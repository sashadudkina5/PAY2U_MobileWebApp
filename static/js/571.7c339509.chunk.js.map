{"version":3,"file":"static/js/571.7c339509.chunk.js","mappings":"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","sources":["webpack://my-app/./src/features/active-user/components/SubscriptionList/SubscriptionList.module.scss?33e7","webpack://my-app/./src/features/active-user/components/SubscriptionListItem/SubscriptionListItem.module.scss?55d4","features/active-user/components/SubscriptionListItem/SubscriptionListItem.tsx","features/active-user/components/SubscriptionList/SubscriptionList.tsx","redux_services/thunk-functions/getSuspendedSubscriptions.tsx","features/active-user/pages/my-subscriptions-page.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"mySubscriptionsListList\":\"SubscriptionList_mySubscriptionsListList__mJm+l\"};","// extracted by mini-css-extract-plugin\nexport default {\"mainBackgroundColor\":\"#fff\",\"mainButtonColor\":\"#fee600\",\"mainTextFontColor\":\"#2b2d33\",\"additionalTextColor\":\"#aaabad\",\"buttonBorderColor\":\"#d5d5d6\",\"descriptionTextColor\":\"#282b2e\",\"suspendButtonText\":\"#ee505a\",\"suspendButtonBackgroundColor\":\"#fdeeee\",\"priceIconColor\":\"#7dd27c\",\"planSelectedBackground\":\"#fff4e8\",\"planSelectedTextColor\":\"#fcb664\",\"subscriptionItemWrapper\":\"SubscriptionListItem_subscriptionItemWrapper__AlI2-\",\"subscriptionItemLogoWrapper\":\"SubscriptionListItem_subscriptionItemLogoWrapper__rsFAF\",\"subscriptionInfoWrapper\":\"SubscriptionListItem_subscriptionInfoWrapper__BcA4j\",\"serviceTitle\":\"SubscriptionListItem_serviceTitle__peL8A\",\"serviceInfo\":\"SubscriptionListItem_serviceInfo__TNTNY\",\"subscriptionTrialWrapper\":\"SubscriptionListItem_subscriptionTrialWrapper__apB9A\",\"serviceTrial\":\"SubscriptionListItem_serviceTrial__Tzf7p\",\"subscriptionPriceWrapper\":\"SubscriptionListItem_subscriptionPriceWrapper__jjHq-\",\"subscriptionPrice\":\"SubscriptionListItem_subscriptionPrice__VFVra\",\"subscriptionPeriod\":\"SubscriptionListItem_subscriptionPeriod__mIQRo\"};","import React from \"react\";\nimport SubscriptionListItemStyles from \"./SubscriptionListItem.module.scss\";\n\ninterface ISubscriptionListItemProps {\n    logo: string,\n    serviceTitle: string,\n    trialEnd?: string,\n    period: string,\n    tariffTitle?: string,\n    price: number,\n    paymentDate: string,\n    isActive: boolean\n}\n\nfunction SubscriptionListItem({logo, serviceTitle, trialEnd, period, tariffTitle, price, paymentDate, isActive}: ISubscriptionListItemProps) {\n  return (\n    <div className={SubscriptionListItemStyles.subscriptionItemWrapper}>\n        <div className={SubscriptionListItemStyles.subscriptionItemLogoWrapper}>\n            <img src={logo} alt={serviceTitle}/>\n        </div>\n        <div className={SubscriptionListItemStyles.subscriptionInfoWrapper}>\n            <h2 className={SubscriptionListItemStyles.serviceTitle}>{serviceTitle}</h2>\n            <p className={SubscriptionListItemStyles.serviceInfo}>{tariffTitle}</p>\n        </div>\n        <div className={SubscriptionListItemStyles.subscriptionTrialWrapper}>\n            {isActive ?         <p className={SubscriptionListItemStyles.serviceTrial}>Списание: {paymentDate}</p> : \n                    <p className={SubscriptionListItemStyles.serviceTrial}>Срок действия истек: {paymentDate}</p>}\n        </div>\n        <div className={SubscriptionListItemStyles.subscriptionPriceWrapper}>\n            <p className={SubscriptionListItemStyles.subscriptionPrice}>{price} ₽</p>\n            <p className={SubscriptionListItemStyles.subscriptionPeriod}>за {period.toLowerCase()}</p>\n        </div>\n    </div>\n  );\n}\n\nexport default SubscriptionListItem;\n","import React, { useEffect } from \"react\";\nimport SubscriptionListStyles from \"./SubscriptionList.module.scss\";\nimport SubscriptionListItem from \"../SubscriptionListItem/SubscriptionListItem\";\nimport { Link } from \"react-router-dom\";\nimport { useAppDispatch, useAppSelector } from \"../../../../utils/hooks\";\nimport { AppDispatch } from \"../../../../redux_services/store\";\nimport {\n  getSuspendedSubscriptionsList,\n  getActiceSubscriptionsList,\n} from \"../../../../redux_services/selectors\";\nimport { getActiveSubscriptions } from \"../../../../redux_services/thunk-functions/getActiveSubscriptions\";\nimport { IActiveSubscriptionItem, ISuspendedSubscriptionItem } from \"../../../../utils/types\";\nimport { formatDate } from \"../../../../utils/formats\";\nimport { getSuspendedSubscriptions } from \"../../../../redux_services/thunk-functions/getSuspendedSubscriptions\";\n\ninterface ISubscriptionListProps {\n  isActive: boolean;\n}\n\nfunction SubscriptionList({ isActive }: ISubscriptionListProps) {\n  const dispatch: AppDispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (isActive) {\n      dispatch(getActiveSubscriptions(1));\n    } else {\n      dispatch(getSuspendedSubscriptions(0));\n    }\n  }, [dispatch, isActive]);\n\n  const activeSubscriptions: any | IActiveSubscriptionItem[] = useAppSelector(\n    getActiceSubscriptionsList\n  );\n\n\n  const suspendedSubscriptions: any | ISuspendedSubscriptionItem[] = useAppSelector(\n    getSuspendedSubscriptionsList\n  );\n\n  const subscriptionsList = isActive ? activeSubscriptions : suspendedSubscriptions;\n  const noSubscriptionsMessage = isActive\n    ? 'Сейчас у вас нет активных подписок'\n    : 'Сейчас у вас нет приостановленных подписок';\n\n    return (\n      <ul className={SubscriptionListStyles.mySubscriptionsListList}>\n        {subscriptionsList.length > 0 ? (\n          subscriptionsList.map((subscription: IActiveSubscriptionItem) => {\n            const linkDestination = isActive \n              ? `/active/main/subscriptions/activated/${subscription.id}` \n              : `/active/main/subscriptions/suspended/${subscription.id}`;\n  \n            return (\n              <Link\n                to={linkDestination}\n                style={{ textDecoration: \"none\", color: \"inherit\" }}\n                key={subscription.id}\n              >\n                <li>\n                  <SubscriptionListItem\n                    isActive={isActive}\n                    logo={subscription.logo}\n                    serviceTitle={subscription.service_name}\n                    period={subscription.period}\n                    price={subscription.price}\n                    tariffTitle={subscription.tariff_name}\n                    paymentDate={formatDate(subscription.payment_date)}\n                  />\n                </li>\n              </Link>\n            );\n          })\n        ) : (\n          <p>{noSubscriptionsMessage}</p>\n        )}\n      </ul>\n    );\n  }\n\n  export default React.memo(SubscriptionList);\n","import { BASE_URL } from \"../../utils/api\";\nimport { AppDispatch } from \"../store\";\nimport { getCookie, fetchWithRefresh } from \"../../utils/api\";\nimport {\n    getSuspendedSubscriptionsRequest,\n    getSuspendedSubscriptionsSuccess,\n    getSuspendedSubscriptionsFailed,\n} from \"../slices/suspendedSubscriptions\";\n\n/**\n * Thunk function for fetching user's suspended subscriptions and dispatching it to the store.\n * If the request is successful, the fetched user's suspended subscriptions\n * are dispatched to the store using the `getSuspendedSubscriptionsSuccess` action.\n * \n * @param {number} isActive - 0 if we request suspended subscriptions, otherwise active.\n *\n * @example\n * // Dispatch function to get user's suspended subscriptions and update the state in Redux\n * dispatch(getSuspendedSubscriptions('isActive'));\n */\n\nexport const getSuspendedSubscriptions = (isActive:number) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(getSuspendedSubscriptionsRequest());\n    const accessToken = getCookie(\"accessToken\");\n\n    if (!accessToken) {\n      console.error(\"AccessToken is missing\");\n      dispatch(getSuspendedSubscriptionsFailed(\"AccessToken is missing\"));\n      return;\n    }\n\n    const suspendedSubscriptions = await fetchWithRefresh(`${BASE_URL}/subscriptions/?is_active=${isActive}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n    dispatch(getSuspendedSubscriptionsSuccess(suspendedSubscriptions));\n  } catch (err) {\n    if (err instanceof Error) {\n      console.error(\"An unexpected error occurred:\", err.message);\n      dispatch(getSuspendedSubscriptionsFailed(err.message));\n    } else {\n      console.error(\"An unexpected error occurred:\", err);\n      dispatch(getSuspendedSubscriptionsFailed(\"An unknown error occurred\"));\n    }\n  }\n};\n","import React from \"react\";\nimport Navigation from \"../../../global-components/Navigation/Navigation\";\nimport PageStyles from \"../styles/active-user-styles.module.scss\";\nimport SubscriptionList from \"../components/SubscriptionList/SubscriptionList\";\n\nfunction MySubscriptionsPage() {\n  return (\n    <div>\n      <div className={PageStyles.navWrapperMySubscriptions}>\n        <Navigation color=\"primary\" pageName={\"Мои подписки\"} path=\"/main\"/>\n        <div className={PageStyles.searchWrapper}>\n        </div>\n      </div>\n      <div className={PageStyles.ativeSubscriptionsWrapper}>\n        <h1 className={PageStyles.mySubscriptionsTitle}>Активные</h1>\n      <SubscriptionList isActive={true}/>\n      </div>\n\n      <div className={PageStyles.suspendedSubscriptionsWrapper}>\n      <h1 className={PageStyles.mySubscriptionsTitle}>Недействующие</h1>\n      <SubscriptionList isActive={false}/>\n      </div>\n\n    </div>\n  );\n}\n\nexport default MySubscriptionsPage;\n"],"names":["_ref","logo","serviceTitle","trialEnd","period","tariffTitle","price","paymentDate","isActive","_jsxs","className","SubscriptionListItemStyles","children","_jsx","src","alt","toLowerCase","SubscriptionList","dispatch","useAppDispatch","useEffect","getActiveSubscriptions","async","getSuspendedSubscriptionsRequest","accessToken","getCookie","console","error","getSuspendedSubscriptionsFailed","suspendedSubscriptions","fetchWithRefresh","concat","BASE_URL","method","headers","Authorization","getSuspendedSubscriptionsSuccess","err","Error","message","getSuspendedSubscriptions","activeSubscriptions","useAppSelector","getActiceSubscriptionsList","getSuspendedSubscriptionsList","subscriptionsList","noSubscriptionsMessage","SubscriptionListStyles","length","map","subscription","linkDestination","id","Link","to","style","textDecoration","color","SubscriptionListItem","service_name","tariff_name","formatDate","payment_date","React","PageStyles","navWrapperMySubscriptions","Navigation","pageName","path","searchWrapper","ativeSubscriptionsWrapper","mySubscriptionsTitle","suspendedSubscriptionsWrapper"],"sourceRoot":""}