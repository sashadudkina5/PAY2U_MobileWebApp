{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const initialState = {\n  loggedIn: false,\n  isLoading: false,\n  loginError: null,\n  registerError: null\n};\nconst authSlice = createSlice({\n  name: \"authInfo\",\n  initialState,\n  reducers: {\n    getLoginRequest(state) {\n      state.isLoading = true;\n    },\n    getRegisterRequest(state) {\n      state.isLoading = true;\n    },\n    getLoginSuccess(state) {\n      state.loggedIn = true;\n      state.isLoading = false;\n    },\n    getRegisterSuccess(state) {\n      state.loggedIn = true;\n      state.isLoading = false;\n    },\n    getLoginFailed(state, action) {\n      state.isLoading = false;\n      state.loggedIn = false;\n      state.loginError = action.payload;\n    },\n    getRegisterFailed(state, action) {\n      state.isLoading = false;\n      state.loggedIn = false;\n      state.registerError = action.payload;\n    }\n  }\n});\nexport const {\n  getLoginRequest,\n  getLoginSuccess,\n  getLoginFailed,\n  getRegisterRequest,\n  getRegisterSuccess,\n  getRegisterFailed\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","loggedIn","isLoading","loginError","registerError","authSlice","name","reducers","getLoginRequest","state","getRegisterRequest","getLoginSuccess","getRegisterSuccess","getLoginFailed","action","payload","getRegisterFailed","actions","reducer"],"sources":["/Users/sashadudkina/Documents/GitHub/PAY2U_MobileWebApp/src/redux_services/slices/authSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { PayloadAction } from \"@reduxjs/toolkit\";\n\nimport { TAuthState } from \"../../utils/types\";\n\nexport const initialState: TAuthState = {\n  loggedIn: false,\n  isLoading: false,\n  loginError: null,\n  registerError: null,\n};\n\nconst authSlice = createSlice({\n  name: \"authInfo\",\n  initialState,\n  reducers: {\n    getLoginRequest(state) {\n      state.isLoading = true;\n    },\n\n    getRegisterRequest(state) {\n      state.isLoading = true;\n    },\n\n    getLoginSuccess(state) {\n      state.loggedIn = true;\n      state.isLoading = false;\n    },\n\n    getRegisterSuccess(state) {\n      state.loggedIn = true;\n      state.isLoading = false;\n    },\n\n    getLoginFailed(state, action: PayloadAction<string>) {\n      state.isLoading = false;\n      state.loggedIn = false;\n      state.loginError = action.payload;\n    },\n\n    getRegisterFailed(state, action: PayloadAction<string>) {\n      state.isLoading = false;\n      state.loggedIn = false;\n      state.registerError = action.payload;\n    },\n  },\n});\n\nexport const { getLoginRequest, getLoginSuccess, getLoginFailed, getRegisterRequest, getRegisterSuccess, getRegisterFailed } =\n  authSlice.actions;\n\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAK9C,OAAO,MAAMC,YAAwB,GAAG;EACtCC,QAAQ,EAAE,KAAK;EACfC,SAAS,EAAE,KAAK;EAChBC,UAAU,EAAE,IAAI;EAChBC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,SAAS,GAAGN,WAAW,CAAC;EAC5BO,IAAI,EAAE,UAAU;EAChBN,YAAY;EACZO,QAAQ,EAAE;IACRC,eAAeA,CAACC,KAAK,EAAE;MACrBA,KAAK,CAACP,SAAS,GAAG,IAAI;IACxB,CAAC;IAEDQ,kBAAkBA,CAACD,KAAK,EAAE;MACxBA,KAAK,CAACP,SAAS,GAAG,IAAI;IACxB,CAAC;IAEDS,eAAeA,CAACF,KAAK,EAAE;MACrBA,KAAK,CAACR,QAAQ,GAAG,IAAI;MACrBQ,KAAK,CAACP,SAAS,GAAG,KAAK;IACzB,CAAC;IAEDU,kBAAkBA,CAACH,KAAK,EAAE;MACxBA,KAAK,CAACR,QAAQ,GAAG,IAAI;MACrBQ,KAAK,CAACP,SAAS,GAAG,KAAK;IACzB,CAAC;IAEDW,cAAcA,CAACJ,KAAK,EAAEK,MAA6B,EAAE;MACnDL,KAAK,CAACP,SAAS,GAAG,KAAK;MACvBO,KAAK,CAACR,QAAQ,GAAG,KAAK;MACtBQ,KAAK,CAACN,UAAU,GAAGW,MAAM,CAACC,OAAO;IACnC,CAAC;IAEDC,iBAAiBA,CAACP,KAAK,EAAEK,MAA6B,EAAE;MACtDL,KAAK,CAACP,SAAS,GAAG,KAAK;MACvBO,KAAK,CAACR,QAAQ,GAAG,KAAK;MACtBQ,KAAK,CAACL,aAAa,GAAGU,MAAM,CAACC,OAAO;IACtC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEP,eAAe;EAAEG,eAAe;EAAEE,cAAc;EAAEH,kBAAkB;EAAEE,kBAAkB;EAAEI;AAAkB,CAAC,GAC1HX,SAAS,CAACY,OAAO;AAEnB,eAAeZ,SAAS,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}