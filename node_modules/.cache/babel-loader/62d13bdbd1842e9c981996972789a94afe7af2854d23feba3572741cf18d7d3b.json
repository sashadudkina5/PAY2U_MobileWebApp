{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport inactiveServicesReducer from './slices/userServicesSlice';\nimport inactiveServiceInfoReducer from './slices/userInactiveServiceSlice';\nimport servicePlansReducer from './slices/servicePlansSlice';\nimport planInfoReducer from './slices/planInfoSlice';\nimport serviceCategoriesReducer from './slices/serviceCategoriesSlice';\nimport popularServicesReducer from './slices/popularServicesSlice';\nimport categoryPostersReducer from './slices/categoryPostersSlice';\nimport paymentHistoryReducer from './slices/paymentHistorySlice';\nimport selectedPaymentReducer from \"./slices/paymentDetailsSlice\";\nimport activeSubscriptionsReducer from \"./slices/activeSubscriptionsSlice\";\nimport suspendedSubscriptionsReducer from \"./slices/suspendedSubscriptions\";\nimport selectedSubscriptionInfoReducer from \"./slices/subsrcriptionInfoSlice\";\nimport addNewServiceSliceReducer from \"./slices/addNewServiceSlice\";\nexport const store = configureStore({\n  reducer: {\n    inactiveServices: inactiveServicesReducer,\n    inactiveServiceInfo: inactiveServiceInfoReducer,\n    servicePlans: servicePlansReducer,\n    selectedPlanInfo: planInfoReducer,\n    serviceCategories: serviceCategoriesReducer,\n    popularServices: popularServicesReducer,\n    categoryPosters: categoryPostersReducer,\n    paymentHistory: paymentHistoryReducer,\n    selectedPayment: selectedPaymentReducer,\n    activeSubscriptions: activeSubscriptionsReducer,\n    suspendedSubscriptions: suspendedSubscriptionsReducer,\n    selectedSubscriptionInfo: selectedSubscriptionInfoReducer,\n    addNewServiceSlice: addNewServiceSliceReducer\n  }\n});","map":{"version":3,"names":["configureStore","inactiveServicesReducer","inactiveServiceInfoReducer","servicePlansReducer","planInfoReducer","serviceCategoriesReducer","popularServicesReducer","categoryPostersReducer","paymentHistoryReducer","selectedPaymentReducer","activeSubscriptionsReducer","suspendedSubscriptionsReducer","selectedSubscriptionInfoReducer","addNewServiceSliceReducer","store","reducer","inactiveServices","inactiveServiceInfo","servicePlans","selectedPlanInfo","serviceCategories","popularServices","categoryPosters","paymentHistory","selectedPayment","activeSubscriptions","suspendedSubscriptions","selectedSubscriptionInfo","addNewServiceSlice"],"sources":["/Users/sashadudkina/Documents/GitHub/PAY2U_MobileWebApp/src/redux_services/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport inactiveServicesReducer from './slices/userServicesSlice'\nimport inactiveServiceInfoReducer from './slices/userInactiveServiceSlice'\nimport servicePlansReducer from './slices/servicePlansSlice'\nimport planInfoReducer from './slices/planInfoSlice'\nimport serviceCategoriesReducer from './slices/serviceCategoriesSlice'\nimport popularServicesReducer from './slices/popularServicesSlice'\nimport categoryPostersReducer from './slices/categoryPostersSlice'\nimport paymentHistoryReducer from './slices/paymentHistorySlice'\nimport selectedPaymentReducer from \"./slices/paymentDetailsSlice\"\nimport activeSubscriptionsReducer from \"./slices/activeSubscriptionsSlice\"\nimport suspendedSubscriptionsReducer from \"./slices/suspendedSubscriptions\"\nimport selectedSubscriptionInfoReducer from \"./slices/subsrcriptionInfoSlice\"\nimport addNewServiceSliceReducer from \"./slices/addNewServiceSlice\"\n\nexport const store = configureStore({\n  reducer: {\n    inactiveServices: inactiveServicesReducer,\n    inactiveServiceInfo: inactiveServiceInfoReducer,\n    servicePlans: servicePlansReducer,\n    selectedPlanInfo: planInfoReducer,\n    serviceCategories: serviceCategoriesReducer,\n    popularServices: popularServicesReducer,\n    categoryPosters: categoryPostersReducer,\n    paymentHistory: paymentHistoryReducer,\n    selectedPayment: selectedPaymentReducer,\n    activeSubscriptions: activeSubscriptionsReducer,\n    suspendedSubscriptions: suspendedSubscriptionsReducer,\n    selectedSubscriptionInfo: selectedSubscriptionInfoReducer,\n    addNewServiceSlice: addNewServiceSliceReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,uBAAuB,MAAM,4BAA4B;AAChE,OAAOC,0BAA0B,MAAM,mCAAmC;AAC1E,OAAOC,mBAAmB,MAAM,4BAA4B;AAC5D,OAAOC,eAAe,MAAM,wBAAwB;AACpD,OAAOC,wBAAwB,MAAM,iCAAiC;AACtE,OAAOC,sBAAsB,MAAM,+BAA+B;AAClE,OAAOC,sBAAsB,MAAM,+BAA+B;AAClE,OAAOC,qBAAqB,MAAM,8BAA8B;AAChE,OAAOC,sBAAsB,MAAM,8BAA8B;AACjE,OAAOC,0BAA0B,MAAM,mCAAmC;AAC1E,OAAOC,6BAA6B,MAAM,iCAAiC;AAC3E,OAAOC,+BAA+B,MAAM,iCAAiC;AAC7E,OAAOC,yBAAyB,MAAM,6BAA6B;AAEnE,OAAO,MAAMC,KAAK,GAAGd,cAAc,CAAC;EAClCe,OAAO,EAAE;IACPC,gBAAgB,EAAEf,uBAAuB;IACzCgB,mBAAmB,EAAEf,0BAA0B;IAC/CgB,YAAY,EAAEf,mBAAmB;IACjCgB,gBAAgB,EAAEf,eAAe;IACjCgB,iBAAiB,EAAEf,wBAAwB;IAC3CgB,eAAe,EAAEf,sBAAsB;IACvCgB,eAAe,EAAEf,sBAAsB;IACvCgB,cAAc,EAAEf,qBAAqB;IACrCgB,eAAe,EAAEf,sBAAsB;IACvCgB,mBAAmB,EAAEf,0BAA0B;IAC/CgB,sBAAsB,EAAEf,6BAA6B;IACrDgB,wBAAwB,EAAEf,+BAA+B;IACzDgB,kBAAkB,EAAEf;EACtB;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}