{"ast":null,"code":"var _jsxFileName = \"/Users/sashadudkina/Documents/GitHub/PAY2U_MobileWebApp/src/features/analytics/components/ProgressBar/ProgressBar.tsx\";\nimport React from 'react';\nimport ProgressBarStyles from \"./ProgressBar.module.scss\"; // This will be your CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBar = ({\n  completed,\n  total\n}) => {\n  const percentage = completed / total * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: ProgressBarStyles.progressBar,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: ProgressBarStyles.progressBarFilled,\n      style: {\n        width: `${percentage}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: ProgressBarStyles.progressBarRemaining\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","ProgressBarStyles","jsxDEV","_jsxDEV","ProgressBar","completed","total","percentage","className","progressBar","children","progressBarFilled","style","width","fileName","_jsxFileName","lineNumber","columnNumber","progressBarRemaining","_c","$RefreshReg$"],"sources":["/Users/sashadudkina/Documents/GitHub/PAY2U_MobileWebApp/src/features/analytics/components/ProgressBar/ProgressBar.tsx"],"sourcesContent":["import React from 'react';\nimport ProgressBarStyles from \"./ProgressBar.module.scss\"; // This will be your CSS file for styling\n\ninterface ProgressBarProps {\n  completed: number; // Amount completed (e.g., 70 for 70%)\n  total: number; // Total amount (e.g., 100 for 100%)\n}\n\nconst ProgressBar: React.FC<ProgressBarProps> = ({ completed, total }) => {\n  const percentage = (completed / total) * 100;\n\n  return (\n    <div className={ProgressBarStyles.progressBar}>\n      <div className={ProgressBarStyles.progressBarFilled} style={{ width: `${percentage}%` }} />\n      <div className={ProgressBarStyles.progressBarRemaining} />\n    </div>\n  );\n};\n\nexport default ProgressBar;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,iBAAiB,MAAM,2BAA2B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAO3D,MAAMC,WAAuC,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAM,CAAC,KAAK;EACxE,MAAMC,UAAU,GAAIF,SAAS,GAAGC,KAAK,GAAI,GAAG;EAE5C,oBACEH,OAAA;IAAKK,SAAS,EAAEP,iBAAiB,CAACQ,WAAY;IAAAC,QAAA,gBAC5CP,OAAA;MAAKK,SAAS,EAAEP,iBAAiB,CAACU,iBAAkB;MAACC,KAAK,EAAE;QAAEC,KAAK,EAAG,GAAEN,UAAW;MAAG;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3Fd,OAAA;MAAKK,SAAS,EAAEP,iBAAiB,CAACiB;IAAqB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV,CAAC;AAACE,EAAA,GATIf,WAAuC;AAW7C,eAAeA,WAAW;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}