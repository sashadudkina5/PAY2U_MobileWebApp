{"ast":null,"code":"var _jsxFileName = \"/Users/sashadudkina/Documents/GitHub/PAY2U_MobileWebApp/src/features/analytics/components/Chart/Chart.tsx\";\nimport React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport ChartStyles from \"./Chart.module.scss\";\n\n// Register ChartJS elements\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst data = {\n  labels: ['Кино', 'Музыка', 'Книги'],\n  datasets: [{\n    label: 'Expenses',\n    data: [299, 899, 257],\n    backgroundColor: ['#FEA17A', '#7DD27C', '#FEE600'],\n    borderColor: 'transparent',\n    borderWidth: 0\n  }]\n};\nconst options = {\n  responsive: true,\n  maintainAspectRatio: false,\n  cutout: '68%',\n  plugins: {\n    legend: {\n      display: false\n    }\n  }\n};\nconst MyDonutChart = () => {\n  return /*#__PURE__*/_jsxDEV(Doughnut, {\n    data: data,\n    options: options,\n    className: ChartStyles.canvas\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n};\n_c = MyDonutChart;\nconst MyLegend = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: ChartStyles.legendWrapper,\n    children: data.labels.map((label, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: ChartStyles.labelWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: ChartStyles.legendName,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: data.datasets[0].backgroundColor[index]\n          },\n          children: \"\\u2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), ' ', label, \": \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: ChartStyles.legendPrice,\n        children: [data.datasets[0].data[index], \" \\u20BD\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 26\n      }, this)]\n    }, label, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_c2 = MyLegend;\nconst Chart = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: ChartStyles.chartContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: ChartStyles.canvas,\n      children: /*#__PURE__*/_jsxDEV(MyDonutChart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MyLegend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }, this);\n};\n_c3 = Chart;\nexport default Chart;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MyDonutChart\");\n$RefreshReg$(_c2, \"MyLegend\");\n$RefreshReg$(_c3, \"Chart\");","map":{"version":3,"names":["React","Doughnut","Chart","ChartJS","ArcElement","Tooltip","Legend","ChartStyles","jsxDEV","_jsxDEV","register","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio","cutout","plugins","legend","display","MyDonutChart","className","canvas","fileName","_jsxFileName","lineNumber","columnNumber","_c","MyLegend","legendWrapper","children","map","index","labelWrapper","legendName","style","color","legendPrice","_c2","chartContainer","_c3","$RefreshReg$"],"sources":["/Users/sashadudkina/Documents/GitHub/PAY2U_MobileWebApp/src/features/analytics/components/Chart/Chart.tsx"],"sourcesContent":["import React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport ChartStyles from \"./Chart.module.scss\"\n\n// Register ChartJS elements\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst data = {\n    labels: ['Кино', 'Музыка', 'Книги'],\n    datasets: [{\n      label: 'Expenses',\n      data: [299, 899, 257],\n      backgroundColor: ['#FEA17A', '#7DD27C', '#FEE600'],\n      borderColor: 'transparent',\n      borderWidth: 0,\n    }],\n  };\n  \n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    cutout: '68%',\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n  };\n\n\nconst MyDonutChart = () => {\n  return <Doughnut data={data} options={options} className={ChartStyles.canvas}/>;\n};\n\nconst MyLegend = () => {\n  return (\n    <div className={ChartStyles.legendWrapper}>\n      {data.labels.map((label, index) => (\n        <div key={label} className={ChartStyles.labelWrapper}>\n            <div className={ChartStyles.legendName}>\n          <span style={{ color: data.datasets[0].backgroundColor[index] }}>\n            •\n          </span>{' '}\n          {label}: </div><div className={ChartStyles.legendPrice}>{data.datasets[0].data[index]} ₽</div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst Chart = () => {\n    return (\n      <div className={ChartStyles.chartContainer}>\n        <div className={ChartStyles.canvas}>\n          <MyDonutChart />\n        </div>\n        <MyLegend />\n      </div>\n    );\n  };\n  \n\nexport default Chart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}