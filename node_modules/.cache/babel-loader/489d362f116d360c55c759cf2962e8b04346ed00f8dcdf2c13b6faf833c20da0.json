{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const initialState = {\n  suspendedSubscriptions: {\n    data: []\n  },\n  isLoading: false,\n  error: null\n};\nconst suspendedSubscriptionsSlice = createSlice({\n  name: \"suspendedSubscriptions\",\n  initialState,\n  reducers: {\n    getSuspendedSubscriptionsRequest(state) {\n      state.isLoading = true;\n    },\n    getSuspendedSubscriptionsSuccess(state, action) {\n      state.suspendedSubscriptions.data = action.payload.data;\n      state.isLoading = false;\n    },\n    getSuspendedSubscriptionsFailed(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  getSuspendedSubscriptionsRequest,\n  getSuspendedSubscriptionsSuccess,\n  getSuspendedSubscriptionsFailed\n} = suspendedSubscriptionsSlice.actions;\nexport default suspendedSubscriptionsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","suspendedSubscriptions","data","isLoading","error","suspendedSubscriptionsSlice","name","reducers","getSuspendedSubscriptionsRequest","state","getSuspendedSubscriptionsSuccess","action","payload","getSuspendedSubscriptionsFailed","actions","reducer"],"sources":["/Users/sashadudkina/Documents/GitHub/PAY2U_MobileWebApp/src/redux_services/slices/suspendedSubscriptions.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { PayloadAction } from \"@reduxjs/toolkit\";\n\nimport {\n    ISuspendedSubscriptionItem,\n    ISuspendedSubscriptionResponse,\n} from \"../../utils/types\";\n\ntype TSuspendedSubscriptionsData = {\n  data: ISuspendedSubscriptionItem[];\n};\n\ntype TSuspendedSubscriptionsState = {\n    suspendedSubscriptions: TSuspendedSubscriptionsData;\n  isLoading: boolean;\n  error: null | any;\n};\n\nexport const initialState: TSuspendedSubscriptionsState = {\n    suspendedSubscriptions: {\n    data: [],\n  },\n  isLoading: false,\n  error: null,\n};\n\nconst suspendedSubscriptionsSlice = createSlice({\n  name: \"suspendedSubscriptions\",\n  initialState,\n  reducers: {\n    getSuspendedSubscriptionsRequest(state) {\n      state.isLoading = true;\n    },\n    getSuspendedSubscriptionsSuccess(\n      state,\n      action: PayloadAction<ISuspendedSubscriptionResponse>\n    ) {\n      state.suspendedSubscriptions.data = action.payload.data;\n      state.isLoading = false;\n    },\n    getSuspendedSubscriptionsFailed(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const {\n    getSuspendedSubscriptionsRequest,\n    getSuspendedSubscriptionsSuccess,\n    getSuspendedSubscriptionsFailed,\n} = suspendedSubscriptionsSlice.actions;\n\nexport default suspendedSubscriptionsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAkB9C,OAAO,MAAMC,YAA0C,GAAG;EACtDC,sBAAsB,EAAE;IACxBC,IAAI,EAAE;EACR,CAAC;EACDC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,2BAA2B,GAAGN,WAAW,CAAC;EAC9CO,IAAI,EAAE,wBAAwB;EAC9BN,YAAY;EACZO,QAAQ,EAAE;IACRC,gCAAgCA,CAACC,KAAK,EAAE;MACtCA,KAAK,CAACN,SAAS,GAAG,IAAI;IACxB,CAAC;IACDO,gCAAgCA,CAC9BD,KAAK,EACLE,MAAqD,EACrD;MACAF,KAAK,CAACR,sBAAsB,CAACC,IAAI,GAAGS,MAAM,CAACC,OAAO,CAACV,IAAI;MACvDO,KAAK,CAACN,SAAS,GAAG,KAAK;IACzB,CAAC;IACDU,+BAA+BA,CAACJ,KAAK,EAAEE,MAAM,EAAE;MAC7CF,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACTJ,gCAAgC;EAChCE,gCAAgC;EAChCG;AACJ,CAAC,GAAGR,2BAA2B,CAACS,OAAO;AAEvC,eAAeT,2BAA2B,CAACU,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}