{"ast":null,"code":"var _jsxFileName = \"/Users/sashadudkina/Documents/GitHub/PAY2U_MobileWebApp/src/features/analytics/components/Pagination/Pagination.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport PaginationStyles from \"./Pagination.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pagination = ({\n  pages\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const paginationRef = React.useRef(); // Use createRef for class components\n\n  useEffect(() => {\n    // Restore scroll position from sessionStorage after page load\n    const savedScrollPosition = sessionStorage.getItem('paginationScrollPosition');\n    if (savedScrollPosition && paginationRef.current) {\n      paginationRef.current.scrollLeft = Number(savedScrollPosition);\n    }\n\n    // Save scroll position to sessionStorage before page unload\n    const saveScrollPosition = () => {\n      if (paginationRef.current) {\n        sessionStorage.setItem('paginationScrollPosition', paginationRef.current.scrollLeft.toString());\n      }\n    };\n\n    // Add the event listener when the component mounts\n    window.addEventListener('beforeunload', saveScrollPosition);\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      window.removeEventListener('beforeunload', saveScrollPosition);\n    };\n  }, []); // The empty array ensures this effect only runs on mount and unmount\n\n  const handleItemClick = path => {\n    // Save current scroll position before navigating\n    if (paginationRef.current) {\n      sessionStorage.setItem('paginationScrollPosition', paginationRef.current.scrollLeft.toString());\n    }\n    navigate(path);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: paginationRef,\n    className: PaginationStyles.paginationContainer,\n    children: pages.map((page, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${PaginationStyles.paginationItem} ${location.pathname === page.path ? PaginationStyles.active : ''}`,\n      onClick: () => handleItemClick(page.path),\n      children: page.name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Pagination, \"bAuwQO2fWkxgjSUmO4AszwSa+KY=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Pagination;\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","useEffect","useNavigate","useLocation","PaginationStyles","jsxDEV","_jsxDEV","Pagination","pages","_s","navigate","location","paginationRef","useRef","savedScrollPosition","sessionStorage","getItem","current","scrollLeft","Number","saveScrollPosition","setItem","toString","window","addEventListener","removeEventListener","handleItemClick","path","ref","className","paginationContainer","children","map","page","index","paginationItem","pathname","active","onClick","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sashadudkina/Documents/GitHub/PAY2U_MobileWebApp/src/features/analytics/components/Pagination/Pagination.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport PaginationStyles from \"./Pagination.module.scss\"\n\ntype Page = {\n  name: string;\n  path: string;\n};\n\ninterface PaginationProps {\n  pages: Page[];\n}\n\nconst Pagination = ({ pages }: PaginationProps) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  \n  const paginationRef = React.useRef<HTMLDivElement>(); // Use createRef for class components\n  \n  useEffect(() => {\n    // Restore scroll position from sessionStorage after page load\n    const savedScrollPosition = sessionStorage.getItem('paginationScrollPosition');\n    if (savedScrollPosition && paginationRef.current) {\n      paginationRef.current.scrollLeft = Number(savedScrollPosition);\n    }\n\n    // Save scroll position to sessionStorage before page unload\n    const saveScrollPosition = () => {\n      if (paginationRef.current) {\n        sessionStorage.setItem('paginationScrollPosition', paginationRef.current.scrollLeft.toString());\n      }\n    };\n    \n    // Add the event listener when the component mounts\n    window.addEventListener('beforeunload', saveScrollPosition);\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      window.removeEventListener('beforeunload', saveScrollPosition);\n    };\n  }, []); // The empty array ensures this effect only runs on mount and unmount\n\n  const handleItemClick = (path: string) => {\n    // Save current scroll position before navigating\n    if (paginationRef.current) {\n      sessionStorage.setItem('paginationScrollPosition', paginationRef.current.scrollLeft.toString());\n    }\n    navigate(path);\n  };\n\n  return (\n    <div ref={paginationRef} className={PaginationStyles.paginationContainer}>\n      {pages.map((page, index) => (\n        <div\n          key={index}\n          className={`${PaginationStyles.paginationItem} ${location.pathname === page.path ? PaginationStyles.active : ''}`}\n          onClick={() => handleItemClick(page.path)}\n        >\n          {page.name}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Pagination;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,gBAAgB,MAAM,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAWvD,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAuB,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAMS,aAAa,GAAGZ,KAAK,CAACa,MAAM,CAAiB,CAAC,CAAC,CAAC;;EAEtDZ,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,mBAAmB,GAAGC,cAAc,CAACC,OAAO,CAAC,0BAA0B,CAAC;IAC9E,IAAIF,mBAAmB,IAAIF,aAAa,CAACK,OAAO,EAAE;MAChDL,aAAa,CAACK,OAAO,CAACC,UAAU,GAAGC,MAAM,CAACL,mBAAmB,CAAC;IAChE;;IAEA;IACA,MAAMM,kBAAkB,GAAGA,CAAA,KAAM;MAC/B,IAAIR,aAAa,CAACK,OAAO,EAAE;QACzBF,cAAc,CAACM,OAAO,CAAC,0BAA0B,EAAET,aAAa,CAACK,OAAO,CAACC,UAAU,CAACI,QAAQ,CAAC,CAAC,CAAC;MACjG;IACF,CAAC;;IAED;IACAC,MAAM,CAACC,gBAAgB,CAAC,cAAc,EAAEJ,kBAAkB,CAAC;;IAE3D;IACA,OAAO,MAAM;MACXG,MAAM,CAACE,mBAAmB,CAAC,cAAc,EAAEL,kBAAkB,CAAC;IAChE,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMM,eAAe,GAAIC,IAAY,IAAK;IACxC;IACA,IAAIf,aAAa,CAACK,OAAO,EAAE;MACzBF,cAAc,CAACM,OAAO,CAAC,0BAA0B,EAAET,aAAa,CAACK,OAAO,CAACC,UAAU,CAACI,QAAQ,CAAC,CAAC,CAAC;IACjG;IACAZ,QAAQ,CAACiB,IAAI,CAAC;EAChB,CAAC;EAED,oBACErB,OAAA;IAAKsB,GAAG,EAAEhB,aAAc;IAACiB,SAAS,EAAEzB,gBAAgB,CAAC0B,mBAAoB;IAAAC,QAAA,EACtEvB,KAAK,CAACwB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrB5B,OAAA;MAEEuB,SAAS,EAAG,GAAEzB,gBAAgB,CAAC+B,cAAe,IAAGxB,QAAQ,CAACyB,QAAQ,KAAKH,IAAI,CAACN,IAAI,GAAGvB,gBAAgB,CAACiC,MAAM,GAAG,EAAG,EAAE;MAClHC,OAAO,EAAEA,CAAA,KAAMZ,eAAe,CAACO,IAAI,CAACN,IAAI,CAAE;MAAAI,QAAA,EAEzCE,IAAI,CAACM;IAAI,GAJLL,KAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKP,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAClC,EAAA,CAlDIF,UAAU;EAAA,QACGL,WAAW,EACXC,WAAW;AAAA;AAAAyC,EAAA,GAFxBrC,UAAU;AAoDhB,eAAeA,UAAU;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}