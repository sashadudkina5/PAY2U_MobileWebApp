{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const initialState = {\n  selectedPlanInfo: {\n    data: {\n      id: \"\",\n      name: \"\",\n      description: \"\",\n      condition: {\n        count: 0,\n        period: \"\",\n        price: 0\n      },\n      special_condition: {\n        count: 0,\n        period: \"\",\n        price: 0\n      },\n      trial_period: {\n        count: 0,\n        period: \"\",\n        price: 0\n      }\n    }\n  },\n  isLoading: false,\n  error: null\n};\nconst selectedPlanInfoSlice = createSlice({\n  name: \"selectedPlanInfo\",\n  initialState,\n  reducers: {\n    getPlanInfoRequest(state) {\n      state.isLoading = true;\n    },\n    getPlanInfoSuccess(state, action) {\n      state.selectedPlanInfo.data = action.payload;\n      state.isLoading = false;\n    },\n    getPlanInfoFailed(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  getPlanInfoRequest,\n  getPlanInfoSuccess,\n  getPlanInfoFailed\n} = selectedPlanInfoSlice.actions;\nexport default selectedPlanInfoSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","selectedPlanInfo","data","id","name","description","condition","count","period","price","special_condition","trial_period","isLoading","error","selectedPlanInfoSlice","reducers","getPlanInfoRequest","state","getPlanInfoSuccess","action","payload","getPlanInfoFailed","actions","reducer"],"sources":["/Users/sashadudkina/Documents/GitHub/PAY2U_MobileWebApp/src/redux_services/slices/planInfoSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { PayloadAction } from \"@reduxjs/toolkit\";\n\nimport { IPlanInfo } from \"../../utils/types\";\n\ntype TPlanInfoData = {\n    data: IPlanInfo;\n  };\n\ntype ISelectedPlanInfoState = {\n  selectedPlanInfo: TPlanInfoData;\n  isLoading: boolean;\n  error: null | any;\n};\n\nexport const initialState: ISelectedPlanInfoState = {\n  selectedPlanInfo: {\n    data: {\n        id: \"\",\n        name: \"\",\n        description: \"\",\n        condition: {\n            count: 0,\n            period:  \"\",\n            price: 0,\n        },\n        special_condition: {\n            count: 0,\n            period:  \"\",\n            price: 0,\n        },\n        trial_period: {\n            count: 0,\n            period:  \"\",\n            price: 0,\n        }\n    }\n  },\n  isLoading: false,\n  error: null,\n};\n\nconst selectedPlanInfoSlice = createSlice({\n  name: \"selectedPlanInfo\",\n  initialState,\n  reducers: {\n    getPlanInfoRequest(state) {\n      state.isLoading = true;\n    },\n    getPlanInfoSuccess(\n      state,\n      action: PayloadAction<IPlanInfo>\n    ) {\n      state.selectedPlanInfo.data = action.payload;\n      state.isLoading = false;\n    },\n    getPlanInfoFailed(state, action: PayloadAction<string>) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const {\n    getPlanInfoRequest,\n    getPlanInfoSuccess,\n    getPlanInfoFailed,\n} = selectedPlanInfoSlice.actions;\n\nexport default selectedPlanInfoSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAe9C,OAAO,MAAMC,YAAoC,GAAG;EAClDC,gBAAgB,EAAE;IAChBC,IAAI,EAAE;MACFC,EAAE,EAAE,EAAE;MACNC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,EAAE;MACfC,SAAS,EAAE;QACPC,KAAK,EAAE,CAAC;QACRC,MAAM,EAAG,EAAE;QACXC,KAAK,EAAE;MACX,CAAC;MACDC,iBAAiB,EAAE;QACfH,KAAK,EAAE,CAAC;QACRC,MAAM,EAAG,EAAE;QACXC,KAAK,EAAE;MACX,CAAC;MACDE,YAAY,EAAE;QACVJ,KAAK,EAAE,CAAC;QACRC,MAAM,EAAG,EAAE;QACXC,KAAK,EAAE;MACX;IACJ;EACF,CAAC;EACDG,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,qBAAqB,GAAGf,WAAW,CAAC;EACxCK,IAAI,EAAE,kBAAkB;EACxBJ,YAAY;EACZe,QAAQ,EAAE;IACRC,kBAAkBA,CAACC,KAAK,EAAE;MACxBA,KAAK,CAACL,SAAS,GAAG,IAAI;IACxB,CAAC;IACDM,kBAAkBA,CAChBD,KAAK,EACLE,MAAgC,EAChC;MACAF,KAAK,CAAChB,gBAAgB,CAACC,IAAI,GAAGiB,MAAM,CAACC,OAAO;MAC5CH,KAAK,CAACL,SAAS,GAAG,KAAK;IACzB,CAAC;IACDS,iBAAiBA,CAACJ,KAAK,EAAEE,MAA6B,EAAE;MACtDF,KAAK,CAACL,SAAS,GAAG,KAAK;MACvBK,KAAK,CAACJ,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACTJ,kBAAkB;EAClBE,kBAAkB;EAClBG;AACJ,CAAC,GAAGP,qBAAqB,CAACQ,OAAO;AAEjC,eAAeR,qBAAqB,CAACS,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}