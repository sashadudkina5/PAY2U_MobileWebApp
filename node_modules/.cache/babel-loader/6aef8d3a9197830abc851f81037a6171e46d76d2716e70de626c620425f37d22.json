{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const initialState = {\n  addedSuccess: false,\n  isLoading: false,\n  error: null,\n  newAdded: null\n};\nconst addNewServiceSlice = createSlice({\n  name: \"addNewService\",\n  initialState,\n  reducers: {\n    addNewServiceRequest(state) {\n      state.isLoading = true;\n    },\n    addNewServiceSuccess(state, action) {\n      state.addedSuccess = true;\n      state.isLoading = false;\n      state.newAdded = action.payload;\n    },\n    addNewServiceFailed(state, action) {\n      state.isLoading = false;\n      state.addedSuccess = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  addNewServiceRequest,\n  addNewServiceSuccess,\n  addNewServiceFailed\n} = addNewServiceSlice.actions;\nexport default addNewServiceSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","addedSuccess","isLoading","error","newAdded","addNewServiceSlice","name","reducers","addNewServiceRequest","state","addNewServiceSuccess","action","payload","addNewServiceFailed","actions","reducer"],"sources":["/Users/sashadudkina/Documents/GitHub/PAY2U_MobileWebApp/src/redux_services/slices/addNewServiceSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { PayloadAction } from \"@reduxjs/toolkit\";\n\nimport { ISubscriptionInfo as addNewServiceResponse, TAddNewSubscriptionState} from \"../../utils/types\";\n\n\nexport const initialState: TAddNewSubscriptionState = {\n    addedSuccess: false,\n    isLoading: false,\n    error: null,\n    newAdded: null,\n};\n\nconst addNewServiceSlice = createSlice({\n  name: \"addNewService\",\n  initialState,\n  reducers: {\n    addNewServiceRequest(state) {\n      state.isLoading = true;\n    },\n    addNewServiceSuccess(\n      state, action: PayloadAction<addNewServiceResponse>\n    ) {\n      state.addedSuccess = true;\n      state.isLoading = false;\n      state.newAdded = action.payload;\n    },\n    addNewServiceFailed(state, action: PayloadAction<string>) {\n      state.isLoading = false;\n      state.addedSuccess = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const {\n    addNewServiceRequest,\n    addNewServiceSuccess,\n    addNewServiceFailed,\n} = addNewServiceSlice.actions;\n\nexport default addNewServiceSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAM9C,OAAO,MAAMC,YAAsC,GAAG;EAClDC,YAAY,EAAE,KAAK;EACnBC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAE;AACd,CAAC;AAED,MAAMC,kBAAkB,GAAGN,WAAW,CAAC;EACrCO,IAAI,EAAE,eAAe;EACrBN,YAAY;EACZO,QAAQ,EAAE;IACRC,oBAAoBA,CAACC,KAAK,EAAE;MAC1BA,KAAK,CAACP,SAAS,GAAG,IAAI;IACxB,CAAC;IACDQ,oBAAoBA,CAClBD,KAAK,EAAEE,MAA4C,EACnD;MACAF,KAAK,CAACR,YAAY,GAAG,IAAI;MACzBQ,KAAK,CAACP,SAAS,GAAG,KAAK;MACvBO,KAAK,CAACL,QAAQ,GAAGO,MAAM,CAACC,OAAO;IACjC,CAAC;IACDC,mBAAmBA,CAACJ,KAAK,EAAEE,MAA6B,EAAE;MACxDF,KAAK,CAACP,SAAS,GAAG,KAAK;MACvBO,KAAK,CAACR,YAAY,GAAG,KAAK;MAC1BQ,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACTJ,oBAAoB;EACpBE,oBAAoB;EACpBG;AACJ,CAAC,GAAGR,kBAAkB,CAACS,OAAO;AAE9B,eAAeT,kBAAkB,CAACU,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}