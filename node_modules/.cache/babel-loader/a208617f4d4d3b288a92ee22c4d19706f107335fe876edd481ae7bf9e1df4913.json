{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const initialState = {\n  serviceCategories: {\n    data: []\n  },\n  isLoading: false,\n  error: null\n};\nconst serviceCategoriesSlice = createSlice({\n  name: \"serviceCategories\",\n  initialState,\n  reducers: {\n    getServiceCategoriesRequest(state) {\n      state.isLoading = true;\n    },\n    getServiceCategoriesSuccess(state, action) {\n      state.serviceCategories.data = action.payload.data;\n      state.isLoading = false;\n    },\n    getServiceCategoriesFailed(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  getServiceCategoriesRequest,\n  getServiceCategoriesSuccess,\n  getServiceCategoriesFailed\n} = serviceCategoriesSlice.actions;\nexport default serviceCategoriesSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","serviceCategories","data","isLoading","error","serviceCategoriesSlice","name","reducers","getServiceCategoriesRequest","state","getServiceCategoriesSuccess","action","payload","getServiceCategoriesFailed","actions","reducer"],"sources":["/Users/sashadudkina/Documents/GitHub/PAY2U_MobileWebApp/src/redux_services/slices/serviceCategoriesSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { PayloadAction } from \"@reduxjs/toolkit\";\n\nimport {\n  IServiceCategory,\n  IServiceCategoriesResponse,\n} from \"../../utils/types\";\n\ntype TServiceCategoriesData = {\n  data: IServiceCategory[];\n};\n\ntype TServiceCategoriesState = {\n  serviceCategories: TServiceCategoriesData;\n  isLoading: boolean;\n  error: null | any;\n};\n\nexport const initialState: TServiceCategoriesState = {\n  serviceCategories: {\n    data: [],\n  },\n  isLoading: false,\n  error: null,\n};\n\nconst serviceCategoriesSlice = createSlice({\n  name: \"serviceCategories\",\n  initialState,\n  reducers: {\n    getServiceCategoriesRequest(state) {\n      state.isLoading = true;\n    },\n    getServiceCategoriesSuccess(\n      state,\n      action: PayloadAction<IServiceCategoriesResponse>\n    ) {\n      state.serviceCategories.data = action.payload.data;\n      state.isLoading = false;\n    },\n    getServiceCategoriesFailed(state, action: PayloadAction<string>) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const {\n  getServiceCategoriesRequest,\n  getServiceCategoriesSuccess,\n  getServiceCategoriesFailed,\n} = serviceCategoriesSlice.actions;\n\nexport default serviceCategoriesSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAkB9C,OAAO,MAAMC,YAAqC,GAAG;EACnDC,iBAAiB,EAAE;IACjBC,IAAI,EAAE;EACR,CAAC;EACDC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,sBAAsB,GAAGN,WAAW,CAAC;EACzCO,IAAI,EAAE,mBAAmB;EACzBN,YAAY;EACZO,QAAQ,EAAE;IACRC,2BAA2BA,CAACC,KAAK,EAAE;MACjCA,KAAK,CAACN,SAAS,GAAG,IAAI;IACxB,CAAC;IACDO,2BAA2BA,CACzBD,KAAK,EACLE,MAAiD,EACjD;MACAF,KAAK,CAACR,iBAAiB,CAACC,IAAI,GAAGS,MAAM,CAACC,OAAO,CAACV,IAAI;MAClDO,KAAK,CAACN,SAAS,GAAG,KAAK;IACzB,CAAC;IACDU,0BAA0BA,CAACJ,KAAK,EAAEE,MAA6B,EAAE;MAC/DF,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXJ,2BAA2B;EAC3BE,2BAA2B;EAC3BG;AACF,CAAC,GAAGR,sBAAsB,CAACS,OAAO;AAElC,eAAeT,sBAAsB,CAACU,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}