{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const initialState = {\n  servicePlans: {\n    data: []\n  },\n  isLoading: false,\n  error: null\n};\nconst servicePlansSlice = createSlice({\n  name: \"servicePlans\",\n  initialState,\n  reducers: {\n    getServicePlansRequest(state) {\n      state.isLoading = true;\n    },\n    getServicePlansSuccess(state, action) {\n      state.servicePlans.data = action.payload.data;\n      state.isLoading = false;\n    },\n    getServicePlansFailed(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  getServicePlansRequest,\n  getServicePlansSuccess,\n  getServicePlansFailed\n} = servicePlansSlice.actions;\nexport default servicePlansSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","servicePlans","data","isLoading","error","servicePlansSlice","name","reducers","getServicePlansRequest","state","getServicePlansSuccess","action","payload","getServicePlansFailed","actions","reducer"],"sources":["/Users/sashadudkina/Documents/GitHub/PAY2U_MobileWebApp/src/redux_services/slices/servicePlansSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { PayloadAction } from \"@reduxjs/toolkit\";\n\nimport { IServicePlanInfo, IServicePlansResponse } from \"../../utils/types\";\n\ntype TServicePlansData = {\n  data: IServicePlanInfo[];\n};\n\ntype TGetServicePlansState = {\n  servicePlans: TServicePlansData;\n  isLoading: boolean;\n  error: null | any;\n};\n\nexport const initialState: TGetServicePlansState = {\n  servicePlans: {\n    data: [],\n  },\n  isLoading: false,\n  error: null,\n};\n\nconst servicePlansSlice = createSlice({\n  name: \"servicePlans\",\n  initialState,\n  reducers: {\n    getServicePlansRequest(state) {\n      state.isLoading = true;\n    },\n    getServicePlansSuccess(\n      state,\n      action: PayloadAction<IServicePlansResponse>\n    ) {\n      state.servicePlans.data = action.payload.data;\n      state.isLoading = false;\n    },\n    getServicePlansFailed(state, action: PayloadAction<string>) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const {\n    getServicePlansRequest,\n    getServicePlansSuccess,\n    getServicePlansFailed,\n} = servicePlansSlice.actions;\n\nexport default servicePlansSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAe9C,OAAO,MAAMC,YAAmC,GAAG;EACjDC,YAAY,EAAE;IACZC,IAAI,EAAE;EACR,CAAC;EACDC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,iBAAiB,GAAGN,WAAW,CAAC;EACpCO,IAAI,EAAE,cAAc;EACpBN,YAAY;EACZO,QAAQ,EAAE;IACRC,sBAAsBA,CAACC,KAAK,EAAE;MAC5BA,KAAK,CAACN,SAAS,GAAG,IAAI;IACxB,CAAC;IACDO,sBAAsBA,CACpBD,KAAK,EACLE,MAA4C,EAC5C;MACAF,KAAK,CAACR,YAAY,CAACC,IAAI,GAAGS,MAAM,CAACC,OAAO,CAACV,IAAI;MAC7CO,KAAK,CAACN,SAAS,GAAG,KAAK;IACzB,CAAC;IACDU,qBAAqBA,CAACJ,KAAK,EAAEE,MAA6B,EAAE;MAC1DF,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACTJ,sBAAsB;EACtBE,sBAAsB;EACtBG;AACJ,CAAC,GAAGR,iBAAiB,CAACS,OAAO;AAE7B,eAAeT,iBAAiB,CAACU,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}